environment:
  global:
    # Orange version
    VERSION: 3.4.1
    # Repo from which to pull
    #REPO: https://github.com/github/orange3.git
    REPO: https://github.com/ales-erjavec/orange3.git
    # Branch to pull (can also be any ref on remote i.e.
    # release-staging/$VERSION)
    #BRANCH: master
    BRANCH: win-app-reboot
    # commit id on branch (a tag or a sha identifier)
    COMMIT: HEAD
    # If defined fetch and chekout this remote git reference (overrides COMMIT)
    FETCH_REFSPEC: pull/2217/head

  matrix:
    - SPECARGS: --platform win32 --python-version 3.4.4
      PYTAG: 34
      PLATTAG: win32

    - SPECARGS: --platform win_amd64 --python-version 3.5.3
      PYTAG: 35
      PLATTAG: win_amd64

    -

cache:
  - '%LOCALAPPDATA%\pip\Cache'

build_script:
  - git clone --depth 30 -q --branch "%BRANCH%" "%REPO%"
  - cd orange3
#  - ps: |
#    if ( "$Env:FETCH_REFSPEC" != "" ) {
#      git fetch origin "$Env:FETCH_REFSPEC"
#      git checkout -qf FETCH_HEAD
#    } else {
#      git checkout "$Env:COMMIT"
#    }
  - if "%FETCH_REFSPEC%" != "" ( git fetch origin "%FETCH_REFSPEC%" )
  - if "%FETCH_REFSPEC%" != "" ( git checkout -qf FETCH_HEAD )
  - if "%FETCH_REFSPEC%" == "" ( git chechout -qf "%COMMIT%" )

  # Store/restore path around the build.
  - set PATH_BEFORE_BUILD=%PATH%
  # add msys2, python and NSIS to
  - set PATH=C:\msys64\usr\bin;%PATH%
  - if "%MINICONDA%" == "" ( set PATH=C:\Python35;C:\Python35\Scripts;%PATH% )
  - if "%MINICONDA%" != "" ( set PATH=%MINICONDA%;%MINICONDA%\Scripts;%PATH% )
  #- set PATH=C:\Python35;C:\Python35\Scripts;%PATH%
  - set PATH=C:\Program Files (x86)\NSIS;%PATH%
  - if "%MINICONDA%" == "" ( bash scripts/windows/build-conda-installer.sh
  - bash scripts/windows/build-win-installer.sh %SPECARGS%
  - set PATH=%PATH_BEFORE_BUILD%
  - cd ..
  - set INSTALLER=Orange3-%VERSION%-Python%PYTAG%-%PLATTAG%.exe

test_script:
  # Install in silent mode. Output has to be piped somewhere so the installer
  # runs 'attached' to the console.
  - orange3\dist\%INSTALLER% /S /D=C:\test-install > null

  - C:\test-install\Scripts\python --version
  - C:\test-install\Scripts\pip --version
  - C:\test-install\Scripts\pip freeze

  # Run test suite in the installed environment.
  - set ORANGE_DEPRECATIONS_ERROR=1
  - set PYTHONWARNINGS=module
  - C:\test-install\Scripts\python -m unittest Orange.tests Orange.widgets.tests
  - mkdir installers
  - move orange3\dist\%INSTALLER% installers\

on_sucess:
  - ps: |
    cd installers
    if ( $Env:APPVEYOR_REPO_TAG != true ) {
      echo "=========================================="
      echo "Cron builds. Get them while they are hot:"
      $files = Get-ChildItem "installers\" -Filter *.exe |
      Foreach-Object {
        $file_url_path = $_.BaseName -replace "+=%20"
        $url = & curl --upload-file "$_.BaseName" https://transfer.sh/$file_url_path
        echo "$_.BaseName : $url"
      }
      echo "=========================================="
    }


artifacts:
  - path: installers\*

deploy:
  description: ''
  provider: GitHub
  auth_token:
    secure: Nxnsu1AhdU0JXv7T18xJ9mWnLNe6/M1NND+tV6IYU8pdPs97hGbNaprSv2T24/N2
  artifact: installers\*.exe
  draft: True
  on:
    appveyor_repo_tag: true        # deploy on tag push only